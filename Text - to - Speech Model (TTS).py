# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RrjKbGvkXDK-8riVsI2f52X3eq87AfUQ
"""

pip install TTS

pip install speechbrain

pip install pydub

import torch
from speechbrain.inference.vocoders import HIFIGAN
hifi_gan = HIFIGAN.from_hparams(source="speechbrain/tts-hifigan-ljspeech", savedir="pretrained_models/tts-hifigan-ljspeech")
mel_specs = torch.rand(2, 80,298)
waveforms = hifi_gan.decode_batch(mel_specs)

def change_pitch_and_speed(audio_path,output_file,pitch_shift=0, speed_change=1.0):
    """
    Change pitch and speed of an audio file.

    Args:
        audio_path (str): Path to the input audio file.
        pitch_shift (int): The number of semitones to shift the pitch.
        speed_change (float): Speed change factor (1.0 = no change).
        output_file (str): Path to save the modified audio file.
    """
    print(f"Loading audio from {audio_path}...")
    audio = AudioSegment.from_wav(audio_path)

   # Apply all effects
    energetic_audio = (audio + 5).high_pass_filter(2000).speedup(playback_speed=1.1).apply_gain(-audio.max_dBFS)

# Export the transformed audio
    energetic_audio.export("energetic_voice.mp3", format="mp3")

def text_to_speech_with_pitch_and_speed(voice_choice,output_file,speaker_audio=None):
    """
    Converts text to speech and modifies pitch and speed.

    Args:
        text (str): The text to convert to speech.
        voice_choice (int): User's choice for voice (1=Male, 2=Female, 3=Other).
        speaker_audio (str): Path to the audio file for voice cloning (optional).
        pitch_shift (int): The number of semitones to shift the pitch.
        speed_change (float): Speed change factor (1.0 = no change).
        output_file (str): Path to save the audio file.
    """
    # Generate speech as before based on voice_choice
    if voice_choice == 1: # Male voice (predefined)
      # Initialize the model
        tts = TTS("voice_conversion_models/multilingual/vctk/freevc24", gpu=False)
      # Perform voice conversion
        tts.voice_conversion_to_file(source_wav=output_file,target_wav="/content/drive/MyDrive/user.mp3",)
        print("Success")
        return "output.wav"
    elif voice_choice == 2:  # Female voice (predefined)
        print("Success")
        return output_file
    elif voice_choice == 3:  # Other: Voice cloning (user-provided audio)
        if not speaker_audio:
            raise ValueError("You must provide a valid audio file for voice cloning when selecting option 3.")

        print(f"Cloning voice from: {speaker_audio}")
        # Initialize the model
        tts = TTS("voice_conversion_models/multilingual/vctk/freevc24", gpu=False)
        # Perform voice conversion
        tts.voice_conversion_to_file(source_wav=output_file,target_wav=speaker_audio,)
        print("Success")
        return "output.wav"

    else:
        raise ValueError("Invalid voice choice! Please select 1, 2, or 3.")


# Input text
input_text =input("Enter a text:")
# Prompt user for voice choice
print("Select a voice option:")
print("1. Male voice")
print("2. Female voice")
print("3. Provide an audio file for voice cloning")

voice_choice = int(input("Enter your choice (1, 2, or 3): "))

# If voice cloning (option 3), prompt for audio file path
speaker_audio_path = None
if voice_choice == 3:
  speaker_audio_path = input("Enter the path to the audio file for voice cloning: ")

# Input for pitch shift and speed
pitch_shift = int(input("Enter pitch shift (semitones, e.g., 2 for higher pitch, -2 for lower pitch): "))
speed_change = float(input("Enter speed change (1.0 = no change, >1 = faster, <1 = slower): "))


# Call the function with pitch and speed modification

import torchaudio
from speechbrain.inference.TTS import Tacotron2
from speechbrain.inference.vocoders import HIFIGAN
from TTS.api import TTS
from pydub import AudioSegment

# Intialize TTS (tacotron2) and Vocoder (HiFIGAN)
tacotron2 = Tacotron2.from_hparams(source="speechbrain/tts-tacotron2-ljspeech", savedir="pretrained_models/tts-tacotron2-ljspeech")
hifi_gan = HIFIGAN.from_hparams(source="speechbrain/tts-hifigan-ljspeech", savedir="pretrained_model/tts-hifigan-ljspeech")

# Running the TTS
mel_output, mel_length, alignment = tacotron2.encode_text(input_text)
# Running Vocoder (spectrogram-to-waveform)
waveforms = hifi_gan.decode_batch(mel_output)
print(mel_length)
# Save the waverform
torchaudio.save('example_TTS.wav',waveforms.squeeze(1), 22050)
output_audio_path="/content/example_TTS.wav"

# Modify pitch and speed
print(f"Modifying pitch by {pitch_shift} semitones and speed by {speed_change}x")

output_file="energetic_voice.mp3"
change_pitch_and_speed(text_to_speech_with_pitch_and_speed(voice_choice,output_audio_path,speaker_audio=speaker_audio_path)
,output_file,pitch_shift=pitch_shift,speed_change=speed_change)